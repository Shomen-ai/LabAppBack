"""Описание миграции

Revision ID: 2ea7e5ed97af
Revises: 
Create Date: 2024-12-05 20:54:33.031163

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2ea7e5ed97af'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.BIGINT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doctor_specialization',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('specialization', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('hospital_name', sa.TEXT(), nullable=False),
    sa.Column('city_id', sa.BIGINT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_data',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('password', sa.TEXT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('login', sa.TEXT(), nullable=False),
    sa.Column('phone', sa.BIGINT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admissions',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('upcomming', sa.TEXT(), nullable=False),
    sa.Column('completed', sa.TEXT(), nullable=False),
    sa.Column('canselled', sa.TEXT(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users_data.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('city_user',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('city_id', sa.BIGINT(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users_data.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('doctors',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('hospital_id', sa.BIGINT(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('doctor_spec_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospital.id'], ),
    sa.PrimaryKeyConstraint('id', 'hospital_id')
    )
    op.create_table('lab_tests',
    sa.Column('num', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('hospital_id', sa.BIGINT(), nullable=False),
    sa.Column('result', sa.TEXT(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospital.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users_data.id'], ),
    sa.PrimaryKeyConstraint('num', 'user_id', 'hospital_id', 'id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lab_tests')
    op.drop_table('doctors')
    op.drop_table('city_user')
    op.drop_table('admissions')
    op.drop_table('users_data')
    op.drop_table('hospital')
    op.drop_table('doctor_specialization')
    op.drop_table('city')
    # ### end Alembic commands ###
